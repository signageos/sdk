image: $CI_REGISTRY/signageos/docker-node:10.14.2-alpine-build
services:
  - docker:dind

stages:
  - prepare
  - test
  - build
  - publish
  - release

cache:
  untracked: true
  key: "$CI_PROJECT_ID"
  paths:
    - node_modules/

before_script:
  - export VERSION=`cat ./VERSION`
  - export TAG=$([ "$CI_COMMIT_TAG" == "" ] && echo $CI_COMMIT_REF_NAME || echo $(echo ${VERSION}-latest | sed -E 's/^[0-9]+.[0-9]+.[0-9]+-([a-zA-Z0-9]+)(\.[0-9]+)?(-[a-zA-Z0-9]+)?$/\1/p' | tail -n1))
  - npx @signageos/lib@just-tools version-upgrade $VERSION
  - mkdir -p dist
  - npm install --tag $TAG

prepare:
  image: $CI_REGISTRY/signageos/docker:master
  stage: prepare
  before_script: []
  script:
    - ci-prepare
  artifacts:
    when: on_success
    paths:
      - ./VERSION

test:general:
  stage: test
  except:
    - tags
  services:
    - rabbitmq:3.6.6-alpine
  variables:
    amqp_dsn: amqp://guest:guest@rabbitmq:5672/
  script:
    - npm test

test:lint:
  stage: test
  except:
    - tags
  script:
    - if [ `find test* -type f -print0 | xargs -0 grep "\.only" | wc -l` -gt 0 ]; then echo "You forgot the .only in tests" && exit 1; fi
    - npm run lint

test:changelog:
  image: $CI_REGISTRY/signageos/docker:master
  stage: test
  except:
    - tags
  allow_failure: true
  script:
    - ci-test-changelog

test:check:
  stage: test
  except:
    - tags
  allow_failure: true
  script:
    - npm run check

build:
  stage: build
  dependencies:
    - prepare
  script:
    - npm run prepare --production
  artifacts:
    when: on_success
    paths:
      - dist/

publish:npm:
  stage: publish
  dependencies:
    - prepare
    - build
  script:
    - npm publish --ignore-scripts --tag $TAG

publish:npm-public:
  stage: publish
  only:
    - tags
  dependencies:
    - prepare
    - build
  script:
    - export NPM_REGISTRY_URL=https://registry.npmjs.org/
    - export NPM_REGISTRY_HOST=registry.npmjs.org
    - export NPM_AUTH_TOKEN=$PUBLIC_NPM_AUTH_TOKEN
    - node -e 'require("fs").writeFileSync("./package.json", JSON.stringify({ ...require("./package"), "publishConfig":{"registry":"https://registry.npmjs.org/","access":"public" } }, undefined, 2) + "\n")'
    - npm publish --ignore-scripts --tag $TAG

publish:docs:
  stage: publish
  only:
    - tags
  dependencies:
    - prepare
    - build
  script:
    - if [ -x "$(command -v aws)"  ]; then echo "AWS CLI already present"; else make getaws; fi
    - npm i && npm run docs
    - echo $AWS_ALPINE_REPO_S3_PATH
    - aws s3 cp ./docs "s3://signageos-documentation/sdk/$TAG" --recursive
    - rm -rf ./docs

release:tag:
  image: $CI_REGISTRY/signageos/docker:master
  stage: release
  only:
    - master
  when: manual
  allow_failure: false
  before_script: []
  script:
    - ci-release-tag

release:notes:
  image: $CI_REGISTRY/signageos/docker:master
  stage: release
  only:
    - tags
  script:
    - ci-release-notes
